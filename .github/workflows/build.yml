# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
   inputs:
      service:
        description: 'name of the microservice (directory)'     
        required: true
        default: 'template'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

#       - name: Get Current Pull Request
#         uses: 8BitJonny/gh-get-current-pr@1.0.1
#         id: pr
#         with:
#           github-token: ${{ secrets.GIT_TOKEN }}
#           filterOutClosed: true

#       - id: file_changes
#         name: File Changes
#         uses: trilom/file-changes-action@v1.2.3
#         with:
#           prNumber: $
#           pushBefore: ''
#           pushAfter: ''

#       - name: Ouput File Changes
#         run: echo '$'
        
      # setup jdk and validate gradle
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      
      
      # Runs a single command using the runners shell
      - name: Run one "build"
        if: false
#         if: contains(steps.file_changes.outputs.files , '"applications/') || ${{ github.event.inputs.service }} == 'applications'
        run: echo Hello, one!
        working-directory: applications

      - name: Run two "build"
        if: contains(steps.file_changes.outputs.files , 'template/') || ${{ github.event.inputs.service }} == 'template'
        working-directory: template
        run: echo Hello, two!
        
        
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build with Gradle
        run: ./gradlew build
